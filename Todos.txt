scenarios

add real 404 and 500 pages
prerequisites
winter and summer sections indication on subject page
sort sections by type, then offering date span, then earliest weekday/time
correct subject titles
report incorrect info button
plain feedback form on contact page
feature tour: http://tommoor.github.com/crumble/
course link - report an inaccuracy
big "Apply filters while navigating" checkbox at top of filter panel.

DITCH FRIGGING SEARCH!!
Just use like at the very most. see how it does, and use the user feedback to decide if it's worth it.


Search:
Read up on Sphinx itself, so you have some idea of what the heck is going on and how full-text search works.
See if there are any alternatives to django-sphinx, and how well D-S is supported/maintained

indications for distance, other types

Immediate:
HTTP Basic Auth: http://community.webfaction.com/questions/256/apache-basic-authentication-for-mod_wsgi-inc-django-applications
put indication of number of sections next to course listing 	
Enable search on  subject title and course titles and descriptions
Handle no search results
Add feedback integration from http://www.uservoice.com
Django checklist
Use Jetstrap? visual bootstrap ui builder
(calendar canvas)

Sphinx is looking good for full-text search, so it's down to haystack vs sphinx

MVP:
-caching
-make a post on the class of 2013 page (and others, of course)
-consider leaving full text serach for later. for now, use smart navigation a
-compile less
-filter?
-prerequisite info?
-storing searches/analytics

Post-MVP step:
-post sitemap to google
-check out http://www.sourcetreeapp.com/ git and mercurial client gui
-ability to add courses via sign-in
-parse links out of prerequisites e.g. "PREREQUISITES    (BIOL 102/3.0 and BIOL 103/3.0 or BIOL 101/6.0) or (BIOL 201/3.0 and BIOL 202/3.0) or PHED 153/3.0, or permission of the Department"
-course enrollment capacity and current
-department info
-name of student advisor to contact about course issues

Optional:
-parse prerequisites? e.g. "PREREQUISITES    (BIOL 102/3.0 and BIOL 103/3.0 or BIOL 101/6.0) or (BIOL 201/3.0 and BIOL 202/3.0) or PHED 153/3.0, or permission of the Department"
-on subject page, button to show course description in dropdown
-Scrape textbook info from bookstore store page
-When you mouse over a section, display the weekday on the side in visual form, with the section scheduled in. (If the user has sections in there, display them as well.)
-Add selenium server jar location to qcumber_config (webdriver makes this unnecessary?), and figure out how to run it from django
-Email notifications for changes to selected sections
-Have sidebar with persistent search filters. Apply filters to all results as main pane is updated
-ability for users to supply course webpage
-consider using: https://docs.djangoproject.com/en/dev/ref/models/querysets/#get-or-create
-automate setting of term and seaon ordering
-scrape exam schedule and email students
-facebook integration

for APIs: django-tastypie or django rest framework


Analytics: Google anaylits, or http://getclicky.com/help/#/help/pricing
DNS registration: http://www.namecheap.com/
Mocking/design generation: Jetstrap, mockingbird balsamiq
Payment: Stripe, https://www.braintreepayments.com/
Emails: MailChimp, SendGrid
LESS Editor: Crunch (for post-2.1.1)
Bootstrap theme generator: boottheme
HTML Components/UI elements: bootsnipp
User feedback: http://www.uservoice.com
Localization: http://www.getlocalization.com/

Full-text Search:
Full text search: Haystack with Solr, Whoosh, elasticsearch, Xapian (http://www.ironzebra.com/news/26/how-to-add-full-text-search-to-your-django-app-with-postgresql-and-south-migrations)
also, sphinx and django-sphinx
http://stackoverflow.com/questions/737275/comparison-of-full-text-search-engine-lucene-sphinx-postgresql-mysql


https://uwaterloo.ca/open-data/
https://coursecatalog.harvard.edu
https://registrar.princeton.edu/course-offerings/
http://2learn.utoronto.ca/uoft/search/publicCourseSearch.do;jsessionid=87866EBFDBA2316CACA856E9C8222770?method=load
http://www.studymonkey.ca/university-of-toronto/courses






Credits:
Nissi, Christine, Kristen, Matt, Jayrin (for entertaining my silliness)
Christine for design work
Nissi for functionality consultations
Dad
Bob Crawford
Bo Wandschneider 


Imaginary customer:
Nissi clone (keener student)
Academic Advisor (peer or otherwise)






Ways SOLUS sucks:
-Shows different information on catalog versus search page (BIOL 111 shows in search, but NOT IN THE CATALOG...WTF)
-7 clicks minimum to see any sections for a course, or 8 to see all of them
